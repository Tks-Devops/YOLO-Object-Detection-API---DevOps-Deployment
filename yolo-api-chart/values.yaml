replicaCount: 1

yoloApi:
  image: 
    repository: tulasisahu/yolo-api
    pullPolicy: Always

elasticsearch:
  image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
  imagePullPolicy: IfNotPresent
  extraEnvs:
    - name: "discovery.type"
      value: "zen-disco"
    - name: "discovery.seed_hosts"
      value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2"
    - name: "cluster.initial_master_nodes"
      value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2"
  
  resources:
    limits:
      memory: "1Gi"
      cpu: "0.5"
    requests:
      memory: "512Mi"
      cpu: "0.25"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}

podLabels: {}

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []

volumeMounts: []

nodeSelector: {}

tolerations: []

affinity:
  podAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: "app"
                operator: In
                values:
                  - elasticsearch-master
          topologyKey: "kubernetes.io/hostname"
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: "app"
              operator: In
              values:
                - elasticsearch-master
        topologyKey: "kubernetes.io/hostname"

clusterName: "elasticsearch"
nodeGroup: "master"
antiAffinity: "false"

